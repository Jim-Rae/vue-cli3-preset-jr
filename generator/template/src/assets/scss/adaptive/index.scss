/**
 * @author: liuqiao;
 * @date: 2019/07/08;
 * @description:响应式设计
 * 用法： 通过使用mixin来使用，
 * eg:
 * 1.@include g-col(80, 100);表示大屏下宽度占比80%，中屏、小屏下宽度占比100%；
 * 2.@include g-pd-lf/g-pd-rt/g-pd-tp/g-pd-bt(x, y, z)，代表padding四个方向的大屏x，中屏y，小屏z距离设定。单位可以是百分比(即相对于父元素的width)，也可以是px,或em(即相对于元素本身的fontSize)
 *
 */

@import '../var';
//栅栏数
$gutterCount: 100;

// sass无法元编程，通过循环生成各种mixin，故layoutMap无法使用去优化生成mixin的代码了
// https://stackoverflow.com/questions/39380955/how-to-generate-multiple-mixins-mixin-lib-with-loop-in-sass
// $layoutMap: (
// 				width: width,
// 				display: display,
// 				left: left,
// 				right: right,
// 				top: top,
// 				bottom: bottom,
// 				margin-left: mg-lf,
// 				margin-right: mg-rt,
// 				margin-top: mg-tp,
// 				margin-bottom: mg-bt,
// 				padding-left: pd-lf,
// 				padding-right: pd-rt,
// 				padding-top: pd-tp,
// 				padding-bottom: pd-bt
// 			);

//大屏样式
//适用场景：设置多个样式
@mixin g-media-md(){
	@media screen and (min-width: $g-media-md){
		@content;
	}
}
// 中屏样式
//适用场景：设置多个样式
@mixin g-media-sm(){
	@media screen and (max-width: $g-media-sm){
		@content;
	}
}
// 小屏样式
//适用场景：设置多个样式
@mixin g-media-xs(){
	@media screen and (max-width: $g-media-xs){
		@content;
	}
}

// 适用场景：大中小屏下，设置单个样式值
@mixin g-media-attr($options: ()){
	$md: map-get($options, md);
	$sm: map-get($options, sm);
	$xs: map-get($options, xs);
	$attr: map-get($options, attr);
	@if $md {
		@include g-media-md(){
			#{$attr}: $md;
		}
	}
	@if $sm {
		@include g-media-sm(){
			#{$attr}: $sm;
		}
	}
	@if $xs {
		@include g-media-xs(){
			#{$attr}: $xs;
		}
	}
}



//定义被@extend的 样式代码 重构成容易被理解的形式
@for $idx from 1 through $gutterCount{
	$per: percentage($idx / $gutterCount);
	// 生成各种设备下百分比 placeholder
	// 这里 写成 @include g-media-md(){
	// 	%g-col-md-#{$idx}{
	// 			xxxx
	// 	}
	// }
	// 一样可以，说明如果适用 @extend的地方，没有被media包围，那么被继承的样式不管是
	// 样式包裹media还是 media包裹样式的 情况，都能被 @extend继承到
	%g-col-md-#{$idx}{
		@include g-media-md(){
			width: $per;
		}
	}
	%g-col-sm-#{$idx}{
		@include g-media-sm(){
			width: $per;
		}
	}
	%g-col-xs-#{$idx}{
		@include g-media-xs(){
			width: $per;
		}
	}
}

// 生成列布局mixin
// 遇到的bug: 如果@extend被media包围，那么@extend只能继承 同样是@media里面的样式。不能继承 没有定义在@media中的外部样式
@mixin g-col($md: null, $sm: null, $xs: null){
	@if $md {
		@extend %g-col-md-#{$md}
	}
	@if $sm {
		@extend %g-col-sm-#{$sm}
	}
	@if $xs {
		@extend %g-col-xs-#{$xs}
	}
}

@mixin g-width($md: null, $sm: null, $xs: null){
	@include g-media-attr(
			$options: (
				md: $md,
				sm: $sm,
				xs: $xs,
				attr: width
			)
		);
}

@mixin g-pd-lf($md: null, $sm: null, $xs: null){
	@include g-media-attr(
			$options: (
				md: $md,
				sm: $sm,
				xs: $xs,
				attr: padding-left
			)
		);
}

@mixin g-pd-rt($md: null, $sm: null, $xs: null){
	@include g-media-attr(
			$options: (
				md: $md,
				sm: $sm,
				xs: $xs,
				attr: padding-right
			)
		);
}
@mixin g-pd-tp($md: null, $sm: null, $xs: null){
	@include g-media-attr(
			$options: (
				md: $md,
				sm: $sm,
				xs: $xs,
				attr: padding-top
			)
		);

}
@mixin g-pd-bt($md: null, $sm: null, $xs: null){
	@include g-media-attr(
			$options: (
				md: $md,
				sm: $sm,
				xs: $xs,
				attr: padding-bottom
			)
		);
}

@mixin g-mg-lf($md: null, $sm: null, $xs: null){
	@include g-media-attr(
			$options: (
				md: $md,
				sm: $sm,
				xs: $xs,
				attr: margin-left
			)
		);
}

@mixin g-mg-rt($md: null, $sm: null, $xs: null){
	@include g-media-attr(
			$options: (
				md: $md,
				sm: $sm,
				xs: $xs,
				attr: margin-right
			)
		);
}

@mixin g-mg-tp($md: null, $sm: null, $xs: null){
	@include g-media-attr(
			$options: (
				md: $md,
				sm: $sm,
				xs: $xs,
				attr: margin-top
			)
		);

}

@mixin g-mg-bt($md: null, $sm: null, $xs: null){
	@include g-media-attr(
			$options: (
				md: $md,
				sm: $sm,
				xs: $xs,
				attr: margin-bottom
			)
		);
}



@mixin g-display($md: null, $sm: null, $xs: null){
	@include g-media-attr(
			$options: (
				md: $md,
				sm: $sm,
				xs: $xs,
				attr: display
			)
		);
}



// // 大屏隐藏
// @mixin g-hidden-md-up{
// 	@media screen and(max-width: $g-media-sm){
// 		display: none;
// 	}
// }
// // 中屏隐藏
// @mixin g-hidden-sm-down{
// 	@media screen and(max-width: $g-media-sm){
// 		display: none;
// 	}
// }
// // 小屏隐藏
// @mixin g-hidden-xs-down{
// 	@media screen and(max-width: $g-media-xs){
// 		display: none;
// 	}
// }
